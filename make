echo ""
echo "rm -rf build"
rm -rf build

echo ""
echo "mkdir build"
mkdir build

echo ""
echo "javac -d build java/com/hds/aw/commons/librsync/*.java"
javac -d build java/com/hds/aw/commons/librsync/*.java

echo ""
echo "javah -classpath build -d build com.hds.aw.commons.librsync.LibrsyncWrapper"
javah -classpath build -d build com.hds.aw.commons.librsync.LibrsyncWrapper

echo ""
echo "cp c/*.* build/."
cp c/*.* build/.

echo ""
echo "cp lib/librsync.2.0.2.dylib build/."
cp lib/librsync.2.0.2.dylib build/.

echo ""
echo "cd build"
cd build

echo ""
echo "ln -s librsync.2.0.2.dylib librsync.2.dylib"
ln -s librsync.2.0.2.dylib librsync.2.dylib

echo ""
echo "ln -s librsync.2.dylib librsync.dylib"
ln -s librsync.2.dylib librsync.dylib

echo ""
echo "**** If the following command fails with an error that it can't find a .h header file, you may need to add a different '-I' argument, which points to the JDK's header files"
echo "gcc -fPIC -c LibrsyncWrapper.c -I $JAVA_HOME/include -I $JAVA_HOME/include/linux -I /System/Library/Frameworks/JavaVM.framework/Versions/A/Headers -I ."
gcc -fPIC -c LibrsyncWrapper.c -I $JAVA_HOME/include -I $JAVA_HOME/include/linux -I /System/Library/Frameworks/JavaVM.framework/Versions/A/Headers -I .

echo ""
echo "gcc -dynamiclib LibrsyncWrapper.o -o librsyncWrapper.dylib -Wl,-rpath,. -L. -lrsync"
gcc -dynamiclib LibrsyncWrapper.o -o librsyncWrapper.dylib -Wl,-rpath,. -L. -lrsync

echo ""
echo "export LD_LIBRARY_PATH=."
export LD_LIBRARY_PATH=.

echo ""
echo "java -Djava.library.path=. com.hds.aw.commons.librsync.LibrsyncWrapperTest ../data/file.base ../data/file.changed file.sig file.delta file.patch"
java -Djava.library.path=. com.hds.aw.commons.librsync.LibrsyncWrapperTest ../data/file.base ../data/file.changed file.sig file.delta file.patch

echo ""
echo "file.base, the original file:"
ls -l ../data/file.base

echo ""
echo "file.changed, the modified file:"
ls -l ../data/file.changed

echo ""
echo "delta file generated by librsync:"
ls -l file.delta

echo ""
echo "patched file, which should be exactly the same as file.changed:"
ls -l file.patch

